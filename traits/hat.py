

class Hat:

    def __init__(self):
        self.layer = 3

    def get_pos(self, facetype):
        return []


class Bandana(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 1

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
                [6, 7, 8, 16],
                [7, 8, 7, 8],
                [7, 8, 16, 17],
                [8, 9, 6, 7],
                [8, 9, 16, 17],
                [9, 10, 3, 4],
                [9, 10, 5, 6],
                [9, 10, 8, 12],
                [9, 10, 15, 16],
                [10, 11, 4, 5],
                [10, 11, 12, 15],  # blue
                [7, 8, 8, 16],
                [8, 9, 7, 16],
                [9, 10, 2, 3],
                [9, 10, 4, 5],
                [9, 10, 7, 8],
                [9, 10, 12, 15],
                [10, 11, 3, 4],
                [11, 12, 3, 4],
                [12, 13, 3, 4],  # light blue
                [9, 10, 6, 7],
                [10, 11, 5, 6],
                [11, 12, 4, 5]  # dark blue
            ]
        else:
            return [
                [5, 6, 8, 16],
                [6, 7, 7, 8],
                [6, 7, 16, 17],
                [7, 8, 6, 7],
                [7, 8, 16, 17],
                [8, 9, 3, 4],
                [8, 9, 5, 6],
                [8, 9, 8, 12],
                [8, 9, 15, 16],
                [9, 10, 4, 5],
                [9, 10, 12, 15],  # blue
                [6, 7, 8, 16],
                [7, 8, 7, 16],
                [8, 9, 2, 3],
                [8, 9, 4, 5],
                [8, 9, 7, 8],
                [8, 9, 12, 15],
                [9, 10, 3, 4],
                [10, 11, 3, 4],
                [11, 12, 3, 4],  # light blue
                [8, 9, 6, 7],
                [9, 10, 5, 6],
                [10, 11, 4, 5]  # dark blue
            ]


class Beanie(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 2

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
            ]
        else:
            return [
                [3, 4, 9, 14],
                [5, 6, 8, 10],
                [6, 7, 7, 10],
                [7, 8, 6, 9],
                [8, 9, 6, 8],  # blue
                [4, 5, 11, 12],  # black
                [5, 6, 10, 13],
                [6, 7, 10, 13],
                [7, 8, 9, 14],
                [8, 9, 8, 15],  # yellow
                [5, 6, 13, 15],
                [6, 7, 13, 16],
                [7, 8, 14, 17],
                [8, 9, 15, 17],  # red
                [9, 10, 8, 15]  # green
            ]


class Cap(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 10

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
                [5, 6, 9, 16],
                [6, 7, 8, 14],
                [6, 7, 15, 17],
                [7, 8, 7, 15],
                [7, 8, 16, 17],
                [8, 9, 7, 20],
                [9, 10, 7, 21],  # purple
                [6, 7, 14, 15],
                [7, 8, 15, 16]  # light purple
            ]
        else:
            return [
                [4, 5, 8, 15],
                [5, 6, 7, 13],
                [5, 6, 14, 16],
                [6, 7, 6, 14],
                [6, 7, 15, 16],
                [7, 8, 6, 19],
                [8, 9, 6, 20],  # purple
                [5, 6, 13, 14],
                [6, 7, 14, 15]  # light purple
            ]


class CapForward(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 11

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
            ]
        else:
            return [
                [4, 5, 8, 15],
                [5, 6, 7, 8],
                [5, 6, 15, 16],
                [6, 7, 6, 7],
                [6, 7, 16, 17],
                [7, 8, 6, 7],
                [7, 8, 10, 18],
                [8, 9, 6, 7],
                [8, 9, 9, 10],
                [8, 9, 18, 19],
                [9, 10, 6, 19],  # black
                [5, 6, 8, 9],
                [6, 7, 7, 8],
                [8, 9, 10, 18],  # gray
                [5, 6, 9, 15],
                [6, 7, 8, 16],
                [7, 8, 7, 10],
                [8, 9, 7, 9]  # light gray
            ]


class CowboyHat(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 20

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
            ]
        else:
            return [
                [3, 4, 8, 10],
                [3, 4, 13, 15],
                [4, 5, 7, 16],
                [5, 6, 7, 16],
                [6, 7, 7, 16],
                [7, 8, 2, 3],
                [7, 8, 20, 21],
                [8, 9, 2, 21],
                [9, 10, 3, 20],  # yellow brown
                [7, 8, 6, 17]  # brown
            ]


class Fedora(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 27

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
            ]
        else:
            return [
                [3, 4, 9, 14],
                [4, 5, 8, 15],
                [5, 6, 8, 15],
                [6, 7, 7, 16],
                [8, 9, 4, 19],
                [9, 10, 3, 20],  # brown
                [7, 8, 6, 17]  # black
            ]



class Hoodie(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 38

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
            ]
        else:
            return [
                [3, 4, 10, 13],
                [4, 5, 8, 10],
                [4, 5, 13, 15],
                [5, 6, 7, 8],
                [5, 6, 15, 16],
                [6, 7, 6, 7],
                [6, 7, 16, 17],
                [7, 8, 5, 6],
                [7, 8, 17, 18],
                [8, 9, 4, 5],
                [8, 9, 8, 15],
                [8, 9, 18, 19],
                [9, 10, 4, 5],
                [9, 10, 7, 8],
                [9, 10, 15, 16],
                [9, 10, 18, 19],
                [10, 11, 4, 5],
                [10, 11, 6, 7],
                [10, 11, 16, 17],
                [10, 11, 18, 19],
                [11, 12, 3, 4],
                [11, 12, 6, 7],
                [11, 12, 16, 17],
                [11, 12, 19, 20],
                [12, 13, 3, 4],
                [12, 13, 5, 6],
                [12, 13, 16, 18],
                [12, 13, 19, 20],
                [13, 14, 3, 4],
                [13, 14, 5, 6],
                [13, 14, 16, 18],
                [13, 14, 19, 20],
                [14, 15, 2, 3],
                [14, 15, 4, 6],
                [14, 15, 16, 19],
                [14, 15, 20, 21],
                [15, 16, 2, 3],
                [15, 16, 4, 7],
                [15, 16, 16, 19],
                [15, 16, 20, 21],
                [16, 17, 2, 3],
                [16, 17, 4, 7],
                [16, 17, 16, 19],
                [16, 17, 20, 21],
                [17, 18, 2, 3],
                [17, 18, 4, 7],
                [17, 18, 16, 19],
                [17, 18, 20, 21],
                [18, 19, 2, 3],
                [18, 19, 4, 7],
                [18, 19, 16, 19],
                [18, 19, 20, 21],
                [19, 20, 3, 4],
                [19, 20, 5, 7],
                [19, 20, 16, 18],
                [19, 20, 19, 20],
                [20, 21, 3, 4],
                [20, 21, 5, 7],
                [20, 21, 15, 17],
                [20, 21, 18, 19],
                [21, 22, 4, 5],
                [21, 22, 6, 7],
                [21, 22, 10, 16],
                [21, 22, 17, 18],
                [22, 23, 4, 5],
                [22, 23, 6, 7],
                [22, 23, 10, 13],
                [22, 23, 16, 17],
                [23, 24, 4, 5],
                [23, 24, 6, 7],
                [23, 24, 10, 12],
                [23, 24, 13, 16],  # black
                [4, 5, 10, 13],
                [5, 6, 8, 15],
                [6, 7, 7, 16],
                [7, 8, 6, 17],
                [8, 9, 5, 8],
                [8, 9, 15, 18],
                [9, 10, 5, 7],
                [9, 10, 16, 18],
                [10, 11, 5, 6],
                [10, 11, 17, 18],
                [11, 12, 4, 6],
                [11, 12, 17, 19],
                [12, 13, 4, 5],
                [12, 13, 18, 19],
                [13, 14, 4, 5],
                [13, 14, 18, 19],
                [14, 15, 3, 4],
                [14, 15, 19, 20],
                [15, 16, 3, 4],
                [15, 16, 19, 20],
                [16, 17, 3, 4],
                [16, 17, 19, 20],
                [17, 18, 3, 4],
                [17, 18, 19, 20],
                [18, 19, 3, 4],
                [18, 19, 19, 20],
                [19, 20, 4, 5],
                [19, 20, 18, 19],
                [20, 21, 4, 5],
                [20, 21, 17, 18],
                [21, 22, 5, 6],
                [21, 22, 16, 17],
                [22, 23, 5, 6],
                [22, 23, 13, 16],
                [23, 24, 5, 6],
                [23, 24, 12, 13]  # gray
            ]


class KnittedCap(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 41

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
                [5, 6, 9, 15],
                [6, 7, 8, 9],
                [6, 7, 15, 16],
                [7, 8, 7, 8],
                [7, 8, 16, 17],
                [8, 9, 6, 7],
                [8, 9, 17, 18],
                [9, 10, 6, 7],
                [9, 10, 17, 18],  # black
                [6, 7, 9, 15],
                [7, 8, 8, 16],
                [9, 10, 8, 9],
                [9, 10, 10, 11],
                [9, 10, 12, 13],
                [9, 10, 14, 15],
                [9, 10, 16, 17],  # orange
                [8, 9, 7, 17],
                [9, 10, 7, 8],
                [9, 10, 9, 10],
                [9, 10, 11, 12],
                [9, 10, 13, 14],
                [9, 10, 15, 16]  # dark orange
            ]
        else:
            return [
                [5, 6, 8, 15],
                [6, 7, 7, 8],
                [6, 7, 15, 16],
                [7, 8, 6, 7],
                [7, 8, 16, 17],
                [8, 9, 5, 6],
                [8, 9, 17, 18],
                [9, 10, 5, 6],
                [9, 10, 17, 18],  # black
                [6, 7, 8, 15],
                [7, 8, 7, 16],
                [9, 10, 7, 8],
                [9, 10, 9, 10],
                [9, 10, 11, 12],
                [9, 10, 13, 14],
                [9, 10, 15, 16],  # orange
                [8, 9, 6, 17],
                [9, 10, 6, 7],
                [9, 10, 8, 9],
                [9, 10, 10, 11],
                [9, 10, 12, 13],
                [9, 10, 14, 15],
                [9, 10, 16, 17]  # dark orange
            ]


class PilotHelmet(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 57

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
                [5, 6, 9, 15],
                [9, 10, 11, 13],
                [10, 11, 7, 17],
                [11, 12, 6, 8],
                [11, 12, 16, 17],
                [12, 13, 6, 8],
                [12, 13, 16, 17],
                [13, 14, 6, 8],
                [13, 14, 16, 17],
                [14, 15, 6, 8],
                [14, 15, 16, 17],
                [15, 16, 7, 8],
                [15, 16, 16, 17],
                [16, 17, 7, 8],
                [16, 17, 16, 17],
                [17, 18, 7, 8],
                [17, 18, 16, 17],
                [18, 19, 7, 8],
                [18, 19, 16, 17],
                [19, 20, 7, 8],
                [19, 20, 16, 17],
                [20, 21, 7, 8],
                [20, 21, 16, 17],  # green
                [6, 7, 8, 16],
                [7, 8, 7, 8],
                [7, 8, 11, 13],
                [7, 8, 16, 17],
                [8, 9, 7, 8],
                [8, 9, 10, 14],
                [8, 9, 16, 17],
                [9, 10, 7, 11],
                [9, 10, 13, 17],  # black
                [7, 8, 8, 11],
                [7, 8, 13, 16],
                [8, 9, 8, 10],
                [8, 9, 14, 16]  # skyblue
            ]
        else:
            return [
            ]


class PinkWithHat(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 58

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
                [6, 7, 9, 15],
                [7, 8, 8, 11],
                [7, 8, 12, 16],
                [8, 9, 7, 12],
                [8, 9, 13, 17],
                [9, 10, 7, 17],  # black
                [7, 8, 11, 12],
                [8, 9, 12, 13],  # white
                [10, 11, 7, 17],
                [11, 12, 6, 9],
                [11, 12, 11, 14],
                [11, 12, 16, 18],
                [12, 13, 6, 8],
                [12, 13, 12, 13],
                [12, 13, 16, 18],
                [13, 14, 5, 7],
                [13, 14, 16, 19],
                [14, 15, 5, 8],
                [14, 15, 16, 19],
                [15, 16, 5, 8],
                [15, 16, 16, 19],
                [16, 17, 5, 8],
                [16, 17, 16, 19],
                [17, 18, 5, 8],
                [17, 18, 16, 19],
                [18, 19, 6, 8],
                [18, 19, 16, 18],
                [19, 20, 6, 9],
                [19, 20, 15, 18],
                [20, 21, 7, 9],
                [20, 21, 15, 17]  # pink
            ]
        else:
            return [
            ]


class PoliceCap(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 60

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
            ]
        else:
            return [
                [3, 4, 10, 13],
                [4, 5, 6, 10],
                [4, 5, 13, 17],
                [5, 6, 5, 6],
                [5, 6, 17, 18],
                [6, 7, 5, 6],
                [6, 7, 17, 18],
                [7, 8, 6, 7],
                [7, 8, 8, 9],
                [7, 8, 10, 11],
                [7, 8, 12, 13],
                [7, 8, 14, 15],
                [7, 8, 16, 17],
                [8, 9, 6, 9],
                [8, 9, 17, 18],
                [9, 10, 9, 18],  # black
                [4, 5, 10, 13],
                [5, 6, 6, 11],
                [5, 6, 12, 17],
                [6, 7, 6, 17],
                [8, 9, 9, 17],  # navy
                [5, 6, 11, 12],  # yellow
                [7, 8, 7, 8],
                [7, 8, 9, 10],
                [7, 8, 11, 12],
                [7, 8, 13, 14],
                [7, 8, 15, 16]  # white
            ]


class TassleHat(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 77

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
                [2, 3, 11, 13],
                [3, 4, 10, 11],
                [3, 4, 13, 14],
                [4, 5, 9, 10],
                [4, 5, 14, 15],
                [5, 6, 9, 10],
                [5, 6, 14, 15],
                [6, 7, 8, 9],
                [6, 7, 15, 16],
                [7, 8, 7, 8],
                [7, 8, 16, 17],
                [8, 9, 7, 8],
                [8, 9, 16, 17],
                [9, 10, 6, 7],
                [9, 10, 17, 18],
                [10, 11, 6, 7],
                [10, 11, 17, 18],
                [11, 12, 6, 7],
                [11, 12, 17, 18],
                [12, 13, 6, 7],
                [12, 13, 17, 18],
                [13, 14, 6, 7],
                [13, 14, 17, 18],
                [14, 15, 6, 7],
                [14, 15, 17, 18],
                [15, 16, 6, 7],
                [15, 16, 17, 18],
                [16, 17, 6, 7],
                [16, 17, 17, 18],
                [17, 18, 6, 7],
                [17, 18, 17, 18],
                [18, 19, 6, 7],
                [18, 19, 17, 18],
                [19, 20, 5, 6],
                [19, 20, 18, 19],
                [20, 21, 6, 7],
                [20, 21, 8, 9],
                [20, 21, 15, 16],
                [20, 21, 17, 18],
                [21, 22, 7, 8],
                [21, 22, 16, 17],  # black
                [3, 4, 11, 12],
                [4, 5, 10, 11],
                [4, 5, 12, 13],
                [5, 6, 11, 12],
                [5, 6, 13, 14],
                [6, 7, 10, 11],
                [6, 7, 12, 13],
                [6, 7, 14, 15],
                [7, 8, 9, 10],
                [7, 8, 11, 12],
                [7, 8, 13, 14],
                [7, 8, 15, 16],
                [8, 9, 8, 9],
                [8, 9, 10, 11],
                [8, 9, 12, 13],
                [8, 9, 14, 15],
                [9, 10, 7, 8],
                [9, 10, 15, 16],  # blue
                [3, 4, 12, 13],
                [4, 5, 11, 12],
                [4, 5, 13, 14],
                [5, 6, 10, 11],
                [5, 6, 12, 13],
                [6, 7, 9, 10],
                [6, 7, 11, 12],
                [6, 7, 13, 14],
                [7, 8, 8, 9],
                [7, 8, 10, 11],
                [7, 8, 12, 13],
                [7, 8, 14, 15],
                [8, 9, 9, 10],
                [8, 9, 11, 12],
                [8, 9, 13, 14],
                [8, 9, 15, 16],
                [9, 10, 8, 15],
                [9, 10, 16, 17],
                [10, 11, 7, 9],
                [10, 11, 15, 17],
                [11, 12, 7, 8],
                [11, 12, 16, 17],
                [12, 13, 7, 8],
                [12, 13, 16, 17],
                [13, 14, 7, 8],
                [13, 14, 16, 17],
                [14, 15, 7, 8],
                [14, 15, 16, 17],
                [15, 16, 7, 8],
                [15, 16, 16, 17],
                [16, 17, 7, 8],
                [16, 17, 16, 17],
                [17, 18, 7, 8],
                [17, 18, 16, 17],
                [18, 19, 7, 8],
                [18, 19, 16, 17],
                [19, 20, 6, 9],
                [19, 20, 15, 18],
                [20, 21, 7, 8],
                [20, 21, 16, 17]  # green
            ]
        else:
            return [
            ]


class Tiara(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 78

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
                [8, 9, 9, 12],
                [8, 9, 13, 15],
                [9, 10, 12, 13],
                [10, 11, 11, 12],
                [10, 11, 13, 14],
                [11, 12, 12, 13],  # yellow
                [10, 11, 12, 13]  # red
            ]
        else:
            return [
            ]


class TopHat(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 79

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
            ]
        else:
            return [
                [1, 2, 7, 16],
                [2, 3, 6, 17],
                [3, 4, 6, 17],
                [4, 5, 6, 17],
                [5, 6, 6, 17],
                [7, 8, 5, 18],
                [8, 9, 4, 19],  # black
                [6, 7, 6, 17]  # red
            ]


class WeldingGoggles(Hat):

    def __init__(self):
        super().__init__()
        self.trait_id = 83

    def get_pos(self, facetype):
        if facetype == 'Female':
            return [
                [7, 8, 8, 9],
                [7, 8, 11, 14],
                [7, 8, 16, 17],
                [8, 9, 7, 8],
                [8, 9, 12, 13],
                [9, 10, 7, 8],
                [9, 10, 12, 13],
                [10, 11, 7, 9],
                [10, 11, 11, 12],
                [10, 11, 13, 14],
                [10, 11, 16, 17],
                [11, 12, 7, 8],
                [11, 12, 16, 17],  # black
                [7, 8, 9, 11],
                [7, 8, 14, 16],
                [8, 9, 8, 9],
                [8, 9, 11, 12],
                [8, 9, 13, 14],
                [8, 9, 16, 17],
                [9, 10, 8, 9],
                [9, 10, 11, 12],
                [9, 10, 13, 14],
                [9, 10, 16, 17],
                [10, 11, 9, 11],
                [10, 11, 14, 16],  # green
                [8, 9, 9, 11],
                [8, 9, 14, 16],
                [9, 10, 9, 11],
                [9, 10, 14, 16]  # skyblue
            ]
        else:
            return [
            ]
